syntax = "proto3";

package spincomm;

option go_package = "github.com/CodyPerakslis/armadanet/spinner/spincomm";

service Spinner {
    rpc Attach (JoinRequest) returns (stream TaskRequest);
    rpc Run (stream TaskLog) returns (TaskCompletion); 
    rpc Request (TaskRequest) returns (stream TaskLog);
    rpc Update (NodeInfo) returns (PingResp);
}

message UUID {
    string value = 1;
}

message JoinRequest {
    UUID captain_id = 1;
}

message TaskRequest {
    UUID task_id = 1;
    TaskSpec taskspec = 2;
}

message TaskLog {
    UUID task_id = 1;
    string log = 2;
}

message TaskCompletion {
}

message ResourceStatus {
    int64 total = 1;
    int64 assigned = 2;
    int64 unassigned = 3;
    double available = 4;
}

message HostRC {
    ResourceStatus CPU = 1;
    ResourceStatus Memory = 2;
    string GPU = 3;
}

message ContainerStatus {
    repeated string activeContainer = 1;
    repeated string images = 2;
}

message NodeInfo {
    UUID captain_id = 1;
    map<string, ResourceStatus> host_resource = 2;
    repeated string used_ports = 3;
    ContainerStatus container_status = 4;
}

message TaskSpec {
    repeated string Filters = 1;
    string  Sort = 2;
    map<string, ResourceRequirement> ResourceMap = 3;
    map<string, string> Ports = 4;
    bool IsPublic = 5;
    int64 NumReplicas =6;
}

message ResourceRequirement {
    int64 Requested = 1;
    double Weight = 2;
    bool Required = 3;
}

message PingResp {
    bool status = 1;
}